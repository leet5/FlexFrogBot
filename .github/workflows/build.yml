name: FlexFrog Telegram Bot CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🧰 Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.24'

      - name: 📦 Download dependencies
        run: go mod download

      - name: 🧹 Run go vet
        run: go vet ./...

      - name: ✅ Build application
        run: CGO_ENABLED=0 GOOS=linux go build -o app

      - name: 🧪 Run tests
        run: go test ./...

  docker:
    name: Docker Build and Push (multi-arch)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3.5.3

      - name: 🗓️ Set current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: 📦 Read version from file
        id: vars
        run: echo "version=$(cat VERSION)" >> "$GITHUB_OUTPUT"

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0

      - name: 💾 Restore Docker layer cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: 🐳 Build and push multi-arch Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/flex-frog-bot:latest
            ${{ secrets.DOCKER_USERNAME }}/flex-frog-bot:${{ steps.vars.outputs.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.date }}

      - name: 🔄 Update Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
